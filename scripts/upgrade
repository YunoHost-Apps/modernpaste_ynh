#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

path_url=$(ynh_app_setting_get "$app" path)
is_public=$(ynh_app_setting_get "$app" is_public)
final_path=$(ynh_app_setting_get "$app" final_path)
db_name=$(ynh_app_setting_get "$app" db_name)
domain=$(ynh_app_setting_get "$app" domain)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set "$app" is_public 1	# Fix is_public as a boolean value
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set "$app" is_public 0
	is_public=0
fi

if [ -z "$db_name" ]; then	# If db_name doesn't exist, create it
	db_name=$(ynh_sanitize_dbid "$app")
	ynh_app_setting_set "$app" db_name "$db_name"
fi

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
path_url=$(ynh_normalize_url_path "$path_url")

#=================================================
# STANDARD UPGRADE STEPS
#=================================================

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create "$app" "/home/$app"
chsh --shell /bin/bash "$app"

#=================================================
# SPECIFIC UPGRADE
#=================================================

#=================================================
# PIP INSTALLATION
#=================================================

(
	set +eu
	source "${final_path}/venv/bin/activate"
	"${final_path}/venv/bin/pip" install Weblate==2.16
	"${final_path}/venv/bin/pip" install pytz python-bidi PyYaML Babel pyuca pylibravatar pydns psycopg2 python-memcached
	# specific to YunoHost package:
	"${final_path}/venv/bin/pip" install django_sendmail_backend
)

#=================================================
# Migrate databases
#=================================================

(
	set +eu
	source ${final_path}/venv/bin/activate
	export DJANGO_SETTINGS_MODULE="weblate.settings"
	cd "${final_path}"
	weblate migrate --noinput
)

# Verify the checksum and backup the file if it's different
ynh_backup_if_checksum_is_different "$final_path/venv/lib/python2.7/site-packages/weblate/settings.py"
# Recalculate and store the config file checksum into the app settings
ynh_store_file_checksum "$final_path/venv/lib/python2.7/site-packages/weblate/settings.py"

#=================================================
# SETUP LOGROTATE
#=================================================

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate

#=================================================
# GENERIC FINALIZATION
#=================================================

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 0 ]
then	# Remove the public access
	ynh_app_setting_delete "$app" skipped_uris
fi
# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway
	ynh_app_setting_set "$app" unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
